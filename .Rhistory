if ( if(exists("ev_check_id") ){nrow(ev_check_id) == 0} &
if(exists("mof.oc_check_id") ){nrow(mof.oc_check_id) ==0} &
if(exists("mof.oc.ev_check_id") ){nrow(mof.oc.ev_check_id) ==0} &
if(exists("mof.ev_check_id") ){nrow(mof.ev_check_id) ==0} ) {
tryCatch({IPTreport$tree <- treeStructure(Event, Occurrence, eMoF)}, error = function(x){print("tree gives error")})
}}
if (  exists("eMoF")){
mof_noUnit <- c('N', 'NA', 'Dimensionless', 'Dmnless', '', ' ') # add values to the list if they refer to 'no unit'
mof_oc_noTypeID <- eMoF %>% filter (!is.na(occurrenceID), is.na(measurementTypeID) ) %>%
select (measurementType, measurementUnit) %>%
mutate(IDlink = 'occurrence', message = 'measurementtypeID is missing') %>%
group_by (IDlink,measurementType, measurementUnit, message) %>%
summarize(count = n())
mof_noValueID <- eMoF %>% filter ( (is.na(measurementUnit) |
(measurementUnit %in% mof_noUnit)  |
measurementUnitID == "http://vocab.nerc.ac.uk/collection/P06/current/UUUU/" |
measurementUnitID == "http://vocab.nerc.ac.uk/collection/P06/current/XXXX/") &
is.na(measurementValueID) &
(!measurementType %in% c("count") &
!measurementTypeID %in% BODCnomofvalues)) %>%
mutate(IDlink = if_else(!is.na(occurrenceID),"occurrence", "event") ) %>%
mutate(message = 'measurementValues which may need a measurementValueID') %>%
group_by (IDlink, measurementType, measurementValue, message) %>%
summarize(count = n()) %>%
arrange (desc(measurementType))
if (sum(grepl(BODCinstrument, unique(eMoF$measurementTypeID)))== 0){
mof_noInstrument <- data.frame(level = c('warning'),
field = c('measurementType'),
row = NA,
message = c('No sampling instrument present'))
}
if (sum(grepl(paste(BODCeffort, collapse="|"), unique(eMoF$measurementTypeID)))== 0){
mof_noSamplingdescriptor <- data.frame(level = c('warning'),
field = c('measurementType'),
row = NA,
message = c('No sampling descriptors present: see http://vocab.nerc.ac.uk/collection/Q01/current/'))
}
mof_oc_TypeID_NotResolve <- eMoF %>% filter (!is.na(occurrenceID), !is.na(measurementTypeID) ) %>%
select (measurementType, measurementTypeID, measurementUnit) %>%
anti_join(parameters, by = c("measurementTypeID"="uri")) %>%
mutate(IDlink = 'occurrence',
message = 'measurementTypeID does not resolve') %>%
group_by (IDlink,measurementType, measurementTypeID, measurementUnit, message) %>%
summarize(count = n())
mof_oc_ValueID_NotResolve <- eMoF %>% filter (!is.na(occurrenceID), !is.na(measurementValueID) ) %>%
select (measurementValue, measurementValueID) %>%
anti_join(values, by = c("measurementValueID"="uri")) %>%
mutate(IDlink = 'occurrence',
message = 'measurementValueID does not resolve') %>%
group_by (IDlink,measurementValue, measurementValueID, message) %>%
summarize(count = n())
mof_ValueNull <- eMoF %>% mutate (level = 'error',
field = 'measurementValue',
row = row_number(),
message = 'MeasurementValue of Null') %>%
filter (is.na(measurementValue))  %>%
select (level,field, row ,message)
if ( sum(is.na(eMoF$occurrenceID)) != nrow(eMoF)  ){
mof_oc_Value0 <- suppressWarnings(eMoF %>% mutate (level = 'error',
field = 'measurementValue',
row = row_number(),
message = 'Biological value of 0 while occurrenceStatus is present') %>%
inner_join (fncols(Occurrence, c("occurrenceStatus")) %>% filter (is.na(occurrenceStatus) | occurrenceStatus == 'present' ) %>%
select (occurrenceID),
by = 'occurrenceID') %>%
mutate(measurementValue = as.numeric(measurementValue)) %>%
filter ( measurementValue == 0 ) %>%
select (level,field, row ,message))
} else {mof_oc_Value0 <-NULL }
mof_oc_dubs <- eMoF %>% filter (!is.na(occurrenceID), !is.na(measurementTypeID)) %>%
select (occurrenceID, measurementTypeID) %>%
group_by (occurrenceID, measurementTypeID) %>%
summarize(count = n())  %>%
filter (count >1 )  %>%
inner_join((eMoF) %>% mutate (row = row_number()),
by = c("occurrenceID", "measurementTypeID") ) %>%
ungroup() %>%
mutate (field = 'measurementType',
level = 'error',
message = 'Duplicate eMoF record linked to occurrence') %>%
select (level,field, row ,message)
if (  exists("Event") ){
mof_ev_dubs <- eMoF %>% filter (is.na(occurrenceID), !is.na(measurementTypeID)) %>%
select (eventID, measurementTypeID) %>%
group_by (eventID, measurementTypeID) %>%
summarize(count = n())  %>%
filter (count >1 )  %>%
inner_join((eMoF) %>% mutate (row = row_number()),
by = c("eventID", "measurementTypeID") )  %>%
ungroup() %>%
mutate (field = 'measurementType',
level = 'error',
message = 'Duplicate eMoF record linked to event') %>%
select (level,field, row ,message)
mof_ev_noTypeID <- eMoF %>% filter (!is.na(eventID), is.na(occurrenceID), is.na(measurementTypeID) ) %>%
select (measurementType, measurementUnit) %>%
mutate(IDlink = 'event',
message = 'measurementtypeID is missing') %>%
group_by (IDlink,measurementType, measurementUnit, message) %>%
summarize(count = n())
mof_ev_TypeID_NotResolve <- eMoF %>% filter (!is.na(eventID), is.na(occurrenceID),  !is.na(measurementTypeID) ) %>%
select (measurementType, measurementTypeID, measurementUnit) %>%
anti_join(parameters,
by = c("measurementTypeID"="uri")) %>%
mutate(IDlink = 'event',
message = 'measurementTypeID does not resolve') %>%
group_by (IDlink,measurementType, measurementTypeID, measurementUnit, message) %>%
summarize(count = n())
mof_ev_ValueID_NotResolve <- eMoF %>% filter (!is.na(eventID), is.na(occurrenceID), !is.na(measurementValueID) ) %>%
select (measurementValue, measurementValueID) %>%
anti_join(values,
by = c("measurementValueID"="uri")) %>%
mutate(IDlink = 'event',
message = 'measurementValueID does not resolve') %>%
group_by (IDlink,measurementValue, measurementValueID, message) %>%
summarize(count = n())
}
IPTreport$dtb$mof_issues <- suppressWarnings(rbind(mof_oc_noTypeID, mof_noValueID,
if(exists("mof_oc_TypeID_NotResolve")) mof_oc_TypeID_NotResolve,
if(exists("mof_oc_ValueID_NotResolve")) mof_oc_ValueID_NotResolve,
if(exists("mof_ev_noTypeID")) mof_ev_noTypeID,
if(exists("mof_ev_TypeID_NotResolve"))  mof_ev_TypeID_NotResolve,
if(exists("mof_ev_ValueID_NotResolve"))  mof_ev_ValueID_NotResolve ) %>%
select (one_of(c("IDlink" , "measurementType", "measurementTypeID", "measurementValue",
"measurementValueID",  "measurementUnit" , "message" , "count"))))
if (is.data.frame(IPTreport$dtb$mof_issues)){
if (nrow(IPTreport$dtb$mof_issues)>0){
IPTreport$dtb$mof_issues <- IPTreport$dtb$mof_issues[,colSums(is.na(IPTreport$dtb$mof_issues))<nrow(IPTreport$dtb$mof_issues)] %>%
arrange(IDlink , message, desc(count))
}}
emoferror <- rbind(emoferror, mof_ValueNull, mof_oc_Value0, mof_oc_dubs,
if(exists("mof_ev_dubs")) mof_ev_dubs,
if(exists("mof_noInstrument")) mof_noInstrument,
if(exists("mof_noSamplingdescriptor")) mof_noSamplingdescriptor
)
}
if (  exists("Event") ){
if ( nrow(ev_check_id) == 0) {
ev_flat0 <- flatten_event(Event)
ev_flat <- ev_flat0 %>% filter (!eventID %in% Event$parentEventID)
ev_CheckFields <- check_fields(ev_flat, level = "warning") %>% filter (field %in% event_fields())
oc_CheckFields <- check_fields(Occurrence, level = "warning") %>% filter (!field %in% event_fields())
} else {
ev_flat <- Event %>% filter (!eventID %in% Event$parentEventID)
ev_CheckFields <- check_fields(ev_flat, level = "warning") %>% filter (field %in% event_fields())
oc_CheckFields <- check_fields(Occurrence, level = "warning") %>% filter (!field %in% event_fields())
ev_flat0 <- ev_flat
}
if ( nrow(ev_CheckFields) > 0) {
ev_CheckFields <- Event  %>% select(eventID) %>%
mutate (rownew = row_number()) %>%
inner_join(ev_flat %>% select(eventID) %>%
mutate (row = row_number()),
by = "eventID") %>%
right_join(ev_CheckFields, by="row") %>%
select (-eventID, -row) %>%
rename (row=rownew)
}} else  {
oc_CheckFields <- check_fields(Occurrence, level = "warning")
}
# Reading the DwC-A file
imp <- importiptdata(file)
ev_flat0 <- flatten_event(imp$Event)
imp$Event
file <- "https://www.dassh.ac.uk/ipt/resource?r=dasshse00000049"
# Reading the DwC-A file
imp <- importiptdata(file)
ev_flat0 <- flatten_event(imp$Event)
imp$Event
class(imp$Event)
class(imp$Event$eventDate)
# IPT resource to look at
file <- "http://ipt.vliz.be/upload/archive.do?r=test_dates"
# Reading the DwC-A file
imp <- importiptdata(file)
ev_flat0 <- flatten_event(imp$Event)
class(imp$Event$eventDate)
# Do the same for other datasets with special date types
file <- "https://www.dassh.ac.uk/ipt/resource?r=dasshse00000049"
imp <- importiptdata(file)
ev_flat0 <- flatten_event(imp$Event)
class(imp$Event$eventDate)
file <- "http://ipt.vliz.be/upload/resource.do?r=ccv_fishes"
imp <- importiptdata(file)
ev_flat0 <- flatten_event(imp$Event)
class(imp$Event$eventDate)
file <- "http://ipt.vliz.be/upload/resource.do?r=historical_landings_venice_italy_fish_market_between_1905_and_1927"
imp <- importiptdata(file)
ev_flat0 <- flatten_event(imp$Event)
class(imp$Event$eventDate)
# IPT resource to look at
file <- "http://ipt.vliz.be/upload/archive.do?r=test_dates"
# Reading the DwC-A file
imp <- importiptdata(file)
View(imp)
# IPT resource to look at
file <- "http://ipt.vliz.be/upload/archive.do?r=test_dates"
# Reading the DwC-A file
imp <- importiptdata(file)
View(imp)
file <- "http://ipt.vliz.be/upload/archive.do?r=iof_bentvk_2001-05"
# Reading the DwC-A file
imp <- importiptdata(file)
ev_flat0 <- flatten_event(imp$Event)
# IPT resource to look at
file <- "http://ipt.vliz.be/upload/archive.do?r=iof_bentvk_2001-05"
# Reading the DwC-A file
imp <- importiptdata(file)
View(imp)
ev_flat0 <- flatten_event(imp$Event)
class(imp$Event$eventDate)
library(obistools)
library(EMODnetBiocheck)
# IPT resource to look at
file <- "http://ipt.vliz.be/upload/archive.do?r=iof_bentvk_2001-05" # eventDate as IDate - Date
# Reading the DwC-A file
imp <- importiptdata(file)
library(RCurl)
# Reading the DwC-A file
imp <- importiptdata(file)
library(finch)
# IPT resource to look at
file <- "http://ipt.vliz.be/upload/archive.do?r=iof_bentvk_2001-05" # eventDate as IDate - Date
# Reading the DwC-A file
imp <- importiptdata(file)
library(dplyr)
# IPT resource to look at
file <- "http://ipt.vliz.be/upload/archive.do?r=iof_bentvk_2001-05" # eventDate as IDate - Date
# Reading the DwC-A file
imp <- importiptdata(file)
ev_flat0 <- flatten_event(imp$Event)
# Do the same for other datasets with special date types
file <- "https://www.dassh.ac.uk/ipt/resource?r=dasshse00000049" # eventDate as IDate - Date
imp <- importiptdata(file)
ev_flat0 <- flatten_event(imp$Event)
View(ev_flat0)
file <- "http://ipt.vliz.be/upload/resource.do?r=ccv_fishes" # eventDate as character
imp <- importiptdata(file)
ev_flat0 <- flatten_event(imp$Event)
View(ev_flat0)
imp$Event
View(imp$Event)
# IPT resource to look at
file <- "http://ipt.vliz.be/upload/archive.do?r=iof_bentvk_2001-05" # eventDate as IDate - Date
# Reading the DwC-A file
imp <- importiptdata(file)
# Visual checking that there is some event hierarchy
View(imp$Event)
# Flattening events
ev_flat0 <- flatten_event(imp$Event)
file <- "https://www.dassh.ac.uk/ipt/resource?r=dasshse00000049" # eventDate as IDate - Date
imp <- importiptdata(file)
View(imp$Event)
file <- "http://ipt.vliz.be/upload/resource.do?r=ccv_fishes" # eventDate as character
imp <- importiptdata(file)
View(imp$Event)
ev_flat0 <- flatten_event(imp$Event)
file <- "http://ipt.vliz.be/upload/resource.do?r=historical_landings_venice_italy_fish_market_between_1905_and_1927" # eventDate as integer
imp <- importiptdata(file)
View(imp$Event)
file <- "http://ipt.vliz.be/upload/resource.do?r=historical_landings_venice_italy_fish_market_between_1905_and_1927" # eventDate as integer
imp <- importiptdata(file)
View(imp$Event)
ev_flat0 <- flatten_event(imp$Event)
file <- "https://nodc.inogs.it/ipt/resource?r=meiofauna_portauthority" # eventDate as IDate - Date
imp <- importiptdata(file)
View(imp$Event)
ev_flat0 <- flatten_event(imp$Event)
class(imp$Event$eventDate)
file <- "https://nodc.inogs.it/ipt/resource?r=meiofauna_portauthority" # eventDate as IDate - Date
imp <- importiptdata(file)
class(imp$Event$eventDate)
file <- "http://ipt.vliz.be/upload/resource.do?r=meiobenthos_dutch_continental_shelf_1991" # eventDate as integer
imp <- importiptdata(file)
class(imp$Event$eventDate)
ev_flat0 <- flatten_event(imp$Event)
file <- "http://ipt.vliz.be/upload/resource.do?r=test_ruben_dates" # eventDate as character
imp <- importiptdata(file)
View(imp$Event)
file <- "http://ipt.vliz.be/upload/resource.do?r=test_ruben_dates" # eventDate as character
imp <- importiptdata(file)
View(imp$Event)
ev_flat0 <- flatten_event(imp$Event)
class(imp$Event$eventDate)
# IPT resource to look at
file <- "http://ipt.vliz.be/upload/archive.do?r=iof_bentvk_2001-05" # eventDate as IDate - Date
# Reading the DwC-A file
imp <- importiptdata(file)
# Flattening events
ev_flat0 <- flatten_event(imp$Event)
# Visual checking that there is some event hierarchy
View(imp$Event)
# Flattening events
ev_flat0 <- flatten_event(imp$Event)
file <- "https://nodc.inogs.it/ipt/resource?r=meiofauna_portauthority" # eventDate as IDate - Date
imp <- importiptdata(file)
View(imp$Event)
date()
View(importiptdata)
View(cleandataframe)
# Loading necessary libraries
library(obistools)
library(EMODnetBiocheck)
library(RCurl)
library(finch)
library(dplyr)
# IPT resource to look at
file <- "http://ipt.vliz.be/upload/archive.do?r=iof_bentvk_2001-05" # eventDate as IDate - Date
# Reading the DwC-A file
imp <- importiptdata(file)
# Flattening events
ev_flat0 <- flatten_event(imp$Event)
devtools::install_github("EMODnet/EMODnetBiocheck")
devtools::install_github("EMODnet/EMODnetBiocheck")
# Loading necessary libraries
library(obistools)
library(EMODnetBiocheck)
library(RCurl)
library(finch)
library(dplyr)
# IPT resource to look at
file <- "http://ipt.vliz.be/upload/archive.do?r=iof_bentvk_2001-05" # eventDate as IDate - Date
# Reading the DwC-A file
imp <- importiptdata(file)
# Flattening events
ev_flat0 <- flatten_event(imp$Event)
# Loading necessary libraries
library(obistools)
library(EMODnetBiocheck)
library(RCurl)
library(finch)
library(dplyr)
# IPT resource to look at
file <- "http://ipt.vliz.be/upload/archive.do?r=iof_bentvk_2001-05" # eventDate as IDate - Date
# Reading the DwC-A file
imp <- importiptdata(file)
# Flattening events
ev_flat0 <- flatten_event(imp$Event)
# BioCheck tool for Quality control
IPTreport <- checkdataset(IPTreport=imp) #Fails to load - issue with flatten_event()
file <- "https://nodc.inogs.it/ipt/resource?r=meiofauna_portauthority" # eventDate as IDate - Date
imp <- importiptdata(file)
ev_flat0 <- flatten_event(imp$Event)
file <- "https://nodc.inogs.it/ipt/resource?r=meiofauna_portauthority" # eventDate as IDate - Date
imp <- importiptdata(file)
ev_flat0 <- flatten_event(imp$Event)
IPTreport <- checkdataset(IPTreport=imp) # Works well
# Loading necessary libraries
library(obistools)
library(EMODnetBiocheck)
library(RCurl)
library(finch)
library(dplyr)
# BioCheck tool for Quality control
IPTreport <- checkdataset(IPTreport=imp) #Fails to load - issue with flatten_event()
devtools::install_github("EMODnet/EMODnetBiocheck")
devtools::install_github("EMODnet/EMODnetBiocheck", force = T)
devtools::install_github("EMODnet/EMODnetBiocheck", force = T)
# Loading necessary libraries
library(obistools)
library(EMODnetBiocheck)
library(RCurl)
library(finch)
library(dplyr)
# IPT resource to look at
file <- "http://ipt.vliz.be/upload/archive.do?r=iof_bentvk_2001-05" # eventDate as IDate - Date
# Reading the DwC-A file
imp <- importiptdata(file)
# Flattening events
ev_flat0 <- flatten_event(imp$Event)
# BioCheck tool for Quality control
IPTreport <- checkdataset(IPTreport=imp) #Fails to load - issue with flatten_event()
file <- "https://nodc.inogs.it/ipt/resource?r=meiofauna_portauthority" # eventDate as IDate - Date
imp <- importiptdata(file)
ev_flat0 <- flatten_event(imp$Event)
IPTreport <- checkdataset(IPTreport=imp) # Works well
file <- "http://ipt.vliz.be/upload/resource.do?r=ccv_fishes" # eventDate as character
imp <- importiptdata(file)
#View(imp$Event)
ev_flat0 <- flatten_event(imp$Event)
IPTreport <- checkdataset(IPTreport=imp) # Works well
file <- "http://ipt.vliz.be/upload/resource.do?r=test_ruben_dates" # eventDate as integer
imp <- importiptdata(file)
#View(imp$Event)
ev_flat0 <- flatten_event(imp$Event)
IPTreport <- checkdataset(IPTreport=imp) # Works well
# IPT resource to look at
file <- "http://ipt.vliz.be/upload/archive.do?r=iof_bentvk_2001-05" # eventDate as IDate - Date
# Reading the DwC-A file
imp <- importiptdata(file)
# Flattening events
ev_flat0 <- flatten_event(imp$Event)
debug(flatten_event(imp$Event))
# Flattening events
ev_flat0 <- flatten_event(imp$Event)
# Flattening eventflatten_event(imp$Event)
flatten_event(imp$Event)
debug(flatten_event)
# Flattening events
ev_flat0 <- flatten_event(imp$Event)
# Flattening events
ev_flat0 <- flatten_event(imp$Event)
# Flattening events
ev_flat0 <- flatten_event(imp$Event)
check_eventids(imp$Event)
# IPT resource to look at
file <- "http://ipt.vliz.be/upload/archive.do?r=iof_bentvk_2001-05" # eventDate as IDate - Date
# Reading the DwC-A file
imp <- importiptdata(file)
# Flattening events
ev_flat0 <- flatten_event(imp$Event)
check_eventids(imp$Event)
check_extension_eventids(imp$Event)
file <- "https://nodc.inogs.it/ipt/resource?r=meiofauna_portauthority" # eventDate as IDate - Date
imp <- importiptdata(file)
check_eventids(imp$Event)
check_extension_eventids(imp$Event, imp$Occurrence)
devtools::install_github("EMODnet/EMODnetBiocheck")
# Loading necessary libraries
library(obistools)
library(EMODnetBiocheck)
library(RCurl)
library(finch)
library(dplyr)
# IPT resource to look at
file <- "http://ipt.vliz.be/upload/archive.do?r=iof_bentvk_2001-05" # eventDate as IDate - Date
# Reading the DwC-A file
imp <- importiptdata(file)
# Flattening events
ev_flat0 <- flatten_event(imp$Event)
devtools::install_github("iobis/obistools")
devtools::install_github("iobis/obistools")
# Loading necessary libraries
library(obistools)
library(EMODnetBiocheck)
library(RCurl)
library(finch)
library(dplyr)
# IPT resource to look at
file <- "http://ipt.vliz.be/upload/archive.do?r=iof_bentvk_2001-05" # eventDate as IDate - Date
# Reading the DwC-A file
imp <- importiptdata(file)
# Flattening events
ev_flat0 <- flatten_event(imp$Event)
# BioCheck tool for Quality control
IPTreport <- checkdataset(IPTreport=imp) #Fails to load - issue with flatten_event()
# IPT resource to look at
file <- "http://ipt.vliz.be/upload/archive.do?r=iof_bentvk_2001-05" # eventDate as IDate - Date
# Reading the DwC-A file
imp <- importiptdata(file)
# Flattening events
ev_flat0 <- flatten_event(imp$Event)
file <- "https://nodc.inogs.it/ipt/resource?r=meiofauna_portauthority" # eventDate as IDate - Date
imp <- importiptdata(file)
#View(imp$Event)
ev_flat0 <- flatten_event(imp$Event)
file <- "http://ipt.vliz.be/upload/resource.do?r=ccv_fishes" # eventDate as character
imp <- importiptdata(file)
#View(imp$Event)
ev_flat0 <- flatten_event(imp$Event)
file <- "http://ipt.vliz.be/upload/resource.do?r=test_ruben_dates" # eventDate as integer
imp <- importiptdata(file)
#View(imp$Event)
ev_flat0 <- flatten_event(imp$Event)
devtools::install_github("rubenpp7/divewatchr")
library(divewatchr)
divewatch("1qO7_0K1R-4i_MSgtT3zAYbZfxBmPMgQWAi7OmWmb1-M")
devtools::install_github("rubenpp7/divewatchr")
devtools::install_github("rubenpp7/divewatchr")
library(divewatchr)
citation("divewatchr")
divewatch("1qO7_0K1R-4i_MSgtT3zAYbZfxBmPMgQWAi7OmWmb1-M")
??input.dir
?input.dir
View(imp)
ev <- imp$Event
occ <- imp$Occurrence
em <- imp$eMoF
library(dplyr)
data <- left_join(occ, ev)
View(data)
data_ev <- left_join(ev, occ)
data_occ <- left_join(occ, ev)
View(data_ev)
data_tot <- left_join(data_ev, em)
nrow(ev) + nrow(occ) + nrow(em)
View(data_tot)
data_tot2 <- data_tot %>% distinct()
file = "http://ipt.vliz.be/upload/resource?r=smhi-bacterioplankton-nat"
library(EMODnetBiocheck)
library(dplyr)
library(skosxml)
library(stringr)
library(obistools)
library(parsedate)
library(RCurl)
devtools::install_github("EMODnet/EMODnetBiocheck")
library(finch)
file = "http://ipt.vliz.be/upload/resource?r=smhi-bacterioplankton-nat"
imp <- importiptdata(file)
View(imp)
View(imp)
devtools::install_github("EMODnet/EMODnetBiocheck")
devtools::install_github("EMODnet/EMODnetBiocheck", force = T)
install.packages("testthat")
install.packages("testthat")
install.packages("testthat")
shiny::runApp('C:/Users/rubenp/Desktop/Huiswerk 2020/Logbook Scuba Ruben Perez/divewatchrshiny')
setwd("C:/Users/rubenp/Desktop/Huiswerk 2020/Logbook Scuba Ruben Perez/rubenpp7.github.io")
devtools::install_github("rubenpp7/divewatchr")
library(divewatchr)
divewatch("1qO7_0K1R-4i_MSgtT3zAYbZfxBmPMgQWAi7OmWmb1-M")
